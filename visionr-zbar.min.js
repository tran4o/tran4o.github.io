
	VisionR.zbar = function(onDone) {
		var base64 = "data:application/octet-binary;base64,";
		var __dirname = ".";
		var fs = { readFile : function() {}};
		var util = {
		 	promisify : function(fnc) 
		 	{
		 		return (function(name) {
			 		return new Promise(function(resolve,reject) {
			 			fetch(base64)
			 			.then(res => res.arrayBuffer())
			 			.then(buffer => {
			 				resolve(buffer);
			 			});
			 		}); 		 	
		 		});
		 	}
		};
		
		var zbar = (function (exports, fs, util) {
  'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);
  var util__default = /*#__PURE__*/_interopDefaultLegacy(util);

  function _typeof(obj) {
    "@babel/helpers - typeof";

    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function (obj) {
        return typeof obj;
      };
    } else {
      _typeof = function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
      var info = gen[key](arg);
      var value = info.value;
    } catch (error) {
      reject(error);
      return;
    }

    if (info.done) {
      resolve(value);
    } else {
      Promise.resolve(value).then(_next, _throw);
    }
  }

  function _asyncToGenerator(fn) {
    return function () {
      var self = this,
          args = arguments;
      return new Promise(function (resolve, reject) {
        var gen = fn.apply(self, args);

        function _next(value) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
        }

        function _throw(err) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
        }

        _next(undefined);
      });
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    }

    return _assertThisInitialized(self);
  }

  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();

    return function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived),
          result;

      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;

        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }

      return _possibleConstructorReturn(this, result);
    };
  }

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function createCommonjsModule(fn, basedir, module) {
  	return module = {
  		path: basedir,
  		exports: {},
  		require: function (path, base) {
  			return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
  		}
  	}, fn(module, module.exports), module.exports;
  }

  function commonjsRequire () {
  	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
  }

  var runtime_1 = createCommonjsModule(function (module) {
    /**
     * Copyright (c) 2014-present, Facebook, Inc.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */
    var runtime = function (exports) {

      var Op = Object.prototype;
      var hasOwn = Op.hasOwnProperty;
      var undefined$1; // More compressible than void 0.

      var $Symbol = typeof Symbol === "function" ? Symbol : {};
      var iteratorSymbol = $Symbol.iterator || "@@iterator";
      var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
      var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

      function define(obj, key, value) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
        return obj[key];
      }

      try {
        // IE 8 has a broken Object.defineProperty that only works on DOM objects.
        define({}, "");
      } catch (err) {
        define = function define(obj, key, value) {
          return obj[key] = value;
        };
      }

      function wrap(innerFn, outerFn, self, tryLocsList) {
        // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
        var generator = Object.create(protoGenerator.prototype);
        var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
        // .throw, and .return methods.

        generator._invoke = makeInvokeMethod(innerFn, self, context);
        return generator;
      }

      exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
      // record like context.tryEntries[i].completion. This interface could
      // have been (and was previously) designed to take a closure to be
      // invoked without arguments, but in all the cases we care about we
      // already have an existing method we want to call, so there's no need
      // to create a new function object. We can even get away with assuming
      // the method takes exactly one argument, since that happens to be true
      // in every case, so we don't have to touch the arguments object. The
      // only additional allocation required is the completion record, which
      // has a stable shape and so hopefully should be cheap to allocate.

      function tryCatch(fn, obj, arg) {
        try {
          return {
            type: "normal",
            arg: fn.call(obj, arg)
          };
        } catch (err) {
          return {
            type: "throw",
            arg: err
          };
        }
      }

      var GenStateSuspendedStart = "suspendedStart";
      var GenStateSuspendedYield = "suspendedYield";
      var GenStateExecuting = "executing";
      var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
      // breaking out of the dispatch switch statement.

      var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
      // .constructor.prototype properties for functions that return Generator
      // objects. For full spec compliance, you may wish to configure your
      // minifier not to mangle the names of these two functions.

      function Generator() {}

      function GeneratorFunction() {}

      function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
      // don't natively support it.


      var IteratorPrototype = {};

      IteratorPrototype[iteratorSymbol] = function () {
        return this;
      };

      var getProto = Object.getPrototypeOf;
      var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

      if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
        // This environment has a native %IteratorPrototype%; use it instead
        // of the polyfill.
        IteratorPrototype = NativeIteratorPrototype;
      }

      var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
      GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
      GeneratorFunctionPrototype.constructor = GeneratorFunction;
      GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"); // Helper for defining the .next, .throw, and .return methods of the
      // Iterator interface in terms of a single ._invoke method.

      function defineIteratorMethods(prototype) {
        ["next", "throw", "return"].forEach(function (method) {
          define(prototype, method, function (arg) {
            return this._invoke(method, arg);
          });
        });
      }

      exports.isGeneratorFunction = function (genFun) {
        var ctor = typeof genFun === "function" && genFun.constructor;
        return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
      };

      exports.mark = function (genFun) {
        if (Object.setPrototypeOf) {
          Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
        } else {
          genFun.__proto__ = GeneratorFunctionPrototype;
          define(genFun, toStringTagSymbol, "GeneratorFunction");
        }

        genFun.prototype = Object.create(Gp);
        return genFun;
      }; // Within the body of any async function, `await x` is transformed to
      // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
      // `hasOwn.call(value, "__await")` to determine if the yielded value is
      // meant to be awaited.


      exports.awrap = function (arg) {
        return {
          __await: arg
        };
      };

      function AsyncIterator(generator, PromiseImpl) {
        function invoke(method, arg, resolve, reject) {
          var record = tryCatch(generator[method], generator, arg);

          if (record.type === "throw") {
            reject(record.arg);
          } else {
            var result = record.arg;
            var value = result.value;

            if (value && _typeof(value) === "object" && hasOwn.call(value, "__await")) {
              return PromiseImpl.resolve(value.__await).then(function (value) {
                invoke("next", value, resolve, reject);
              }, function (err) {
                invoke("throw", err, resolve, reject);
              });
            }

            return PromiseImpl.resolve(value).then(function (unwrapped) {
              // When a yielded Promise is resolved, its final value becomes
              // the .value of the Promise<{value,done}> result for the
              // current iteration.
              result.value = unwrapped;
              resolve(result);
            }, function (error) {
              // If a rejected Promise was yielded, throw the rejection back
              // into the async generator function so it can be handled there.
              return invoke("throw", error, resolve, reject);
            });
          }
        }

        var previousPromise;

        function enqueue(method, arg) {
          function callInvokeWithMethodAndArg() {
            return new PromiseImpl(function (resolve, reject) {
              invoke(method, arg, resolve, reject);
            });
          }

          return previousPromise = // If enqueue has been called before, then we want to wait until
          // all previous Promises have been resolved before calling invoke,
          // so that results are always delivered in the correct order. If
          // enqueue has not been called before, then it is important to
          // call invoke immediately, without waiting on a callback to fire,
          // so that the async generator function has the opportunity to do
          // any necessary setup in a predictable way. This predictability
          // is why the Promise constructor synchronously invokes its
          // executor callback, and why async functions synchronously
          // execute code before the first await. Since we implement simple
          // async functions in terms of async generators, it is especially
          // important to get this right, even though it requires care.
          previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } // Define the unified helper method that is used to implement .next,
        // .throw, and .return (see defineIteratorMethods).


        this._invoke = enqueue;
      }

      defineIteratorMethods(AsyncIterator.prototype);

      AsyncIterator.prototype[asyncIteratorSymbol] = function () {
        return this;
      };

      exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
      // AsyncIterator objects; they just return a Promise for the value of
      // the final result produced by the iterator.

      exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
        if (PromiseImpl === void 0) PromiseImpl = Promise;
        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
        return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
        : iter.next().then(function (result) {
          return result.done ? result.value : iter.next();
        });
      };

      function makeInvokeMethod(innerFn, self, context) {
        var state = GenStateSuspendedStart;
        return function invoke(method, arg) {
          if (state === GenStateExecuting) {
            throw new Error("Generator is already running");
          }

          if (state === GenStateCompleted) {
            if (method === "throw") {
              throw arg;
            } // Be forgiving, per 25.3.3.3.3 of the spec:
            // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


            return doneResult();
          }

          context.method = method;
          context.arg = arg;

          while (true) {
            var delegate = context.delegate;

            if (delegate) {
              var delegateResult = maybeInvokeDelegate(delegate, context);

              if (delegateResult) {
                if (delegateResult === ContinueSentinel) continue;
                return delegateResult;
              }
            }

            if (context.method === "next") {
              // Setting context._sent for legacy support of Babel's
              // function.sent implementation.
              context.sent = context._sent = context.arg;
            } else if (context.method === "throw") {
              if (state === GenStateSuspendedStart) {
                state = GenStateCompleted;
                throw context.arg;
              }

              context.dispatchException(context.arg);
            } else if (context.method === "return") {
              context.abrupt("return", context.arg);
            }

            state = GenStateExecuting;
            var record = tryCatch(innerFn, self, context);

            if (record.type === "normal") {
              // If an exception is thrown from innerFn, we leave state ===
              // GenStateExecuting and loop back for another invocation.
              state = context.done ? GenStateCompleted : GenStateSuspendedYield;

              if (record.arg === ContinueSentinel) {
                continue;
              }

              return {
                value: record.arg,
                done: context.done
              };
            } else if (record.type === "throw") {
              state = GenStateCompleted; // Dispatch the exception by looping back around to the
              // context.dispatchException(context.arg) call above.

              context.method = "throw";
              context.arg = record.arg;
            }
          }
        };
      } // Call delegate.iterator[context.method](context.arg) and handle the
      // result, either by returning a { value, done } result from the
      // delegate iterator, or by modifying context.method and context.arg,
      // setting context.delegate to null, and returning the ContinueSentinel.


      function maybeInvokeDelegate(delegate, context) {
        var method = delegate.iterator[context.method];

        if (method === undefined$1) {
          // A .throw or .return when the delegate iterator has no .throw
          // method always terminates the yield* loop.
          context.delegate = null;

          if (context.method === "throw") {
            // Note: ["return"] must be used for ES3 parsing compatibility.
            if (delegate.iterator["return"]) {
              // If the delegate iterator has a return method, give it a
              // chance to clean up.
              context.method = "return";
              context.arg = undefined$1;
              maybeInvokeDelegate(delegate, context);

              if (context.method === "throw") {
                // If maybeInvokeDelegate(context) changed context.method from
                // "return" to "throw", let that override the TypeError below.
                return ContinueSentinel;
              }
            }

            context.method = "throw";
            context.arg = new TypeError("The iterator does not provide a 'throw' method");
          }

          return ContinueSentinel;
        }

        var record = tryCatch(method, delegate.iterator, context.arg);

        if (record.type === "throw") {
          context.method = "throw";
          context.arg = record.arg;
          context.delegate = null;
          return ContinueSentinel;
        }

        var info = record.arg;

        if (!info) {
          context.method = "throw";
          context.arg = new TypeError("iterator result is not an object");
          context.delegate = null;
          return ContinueSentinel;
        }

        if (info.done) {
          // Assign the result of the finished delegate to the temporary
          // variable specified by delegate.resultName (see delegateYield).
          context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

          context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
          // exception, let the outer generator proceed normally. If
          // context.method was "next", forget context.arg since it has been
          // "consumed" by the delegate iterator. If context.method was
          // "return", allow the original .return call to continue in the
          // outer generator.

          if (context.method !== "return") {
            context.method = "next";
            context.arg = undefined$1;
          }
        } else {
          // Re-yield the result returned by the delegate method.
          return info;
        } // The delegate iterator is finished, so forget it and continue with
        // the outer generator.


        context.delegate = null;
        return ContinueSentinel;
      } // Define Generator.prototype.{next,throw,return} in terms of the
      // unified ._invoke helper method.


      defineIteratorMethods(Gp);
      define(Gp, toStringTagSymbol, "Generator"); // A Generator should always return itself as the iterator object when the
      // @@iterator function is called on it. Some browsers' implementations of the
      // iterator prototype chain incorrectly implement this, causing the Generator
      // object to not be returned from this call. This ensures that doesn't happen.
      // See https://github.com/facebook/regenerator/issues/274 for more details.

      Gp[iteratorSymbol] = function () {
        return this;
      };

      Gp.toString = function () {
        return "[object Generator]";
      };

      function pushTryEntry(locs) {
        var entry = {
          tryLoc: locs[0]
        };

        if (1 in locs) {
          entry.catchLoc = locs[1];
        }

        if (2 in locs) {
          entry.finallyLoc = locs[2];
          entry.afterLoc = locs[3];
        }

        this.tryEntries.push(entry);
      }

      function resetTryEntry(entry) {
        var record = entry.completion || {};
        record.type = "normal";
        delete record.arg;
        entry.completion = record;
      }

      function Context(tryLocsList) {
        // The root entry object (effectively a try statement without a catch
        // or a finally block) gives us a place to store values thrown from
        // locations where there is no enclosing try statement.
        this.tryEntries = [{
          tryLoc: "root"
        }];
        tryLocsList.forEach(pushTryEntry, this);
        this.reset(true);
      }

      exports.keys = function (object) {
        var keys = [];

        for (var key in object) {
          keys.push(key);
        }

        keys.reverse(); // Rather than returning an object with a next method, we keep
        // things simple and return the next function itself.

        return function next() {
          while (keys.length) {
            var key = keys.pop();

            if (key in object) {
              next.value = key;
              next.done = false;
              return next;
            }
          } // To avoid creating an additional object, we just hang the .value
          // and .done properties off the next function object itself. This
          // also ensures that the minifier will not anonymize the function.


          next.done = true;
          return next;
        };
      };

      function values(iterable) {
        if (iterable) {
          var iteratorMethod = iterable[iteratorSymbol];

          if (iteratorMethod) {
            return iteratorMethod.call(iterable);
          }

          if (typeof iterable.next === "function") {
            return iterable;
          }

          if (!isNaN(iterable.length)) {
            var i = -1,
                next = function next() {
              while (++i < iterable.length) {
                if (hasOwn.call(iterable, i)) {
                  next.value = iterable[i];
                  next.done = false;
                  return next;
                }
              }

              next.value = undefined$1;
              next.done = true;
              return next;
            };

            return next.next = next;
          }
        } // Return an iterator with no values.


        return {
          next: doneResult
        };
      }

      exports.values = values;

      function doneResult() {
        return {
          value: undefined$1,
          done: true
        };
      }

      Context.prototype = {
        constructor: Context,
        reset: function reset(skipTempReset) {
          this.prev = 0;
          this.next = 0; // Resetting context._sent for legacy support of Babel's
          // function.sent implementation.

          this.sent = this._sent = undefined$1;
          this.done = false;
          this.delegate = null;
          this.method = "next";
          this.arg = undefined$1;
          this.tryEntries.forEach(resetTryEntry);

          if (!skipTempReset) {
            for (var name in this) {
              // Not sure about the optimal order of these conditions:
              if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
                this[name] = undefined$1;
              }
            }
          }
        },
        stop: function stop() {
          this.done = true;
          var rootEntry = this.tryEntries[0];
          var rootRecord = rootEntry.completion;

          if (rootRecord.type === "throw") {
            throw rootRecord.arg;
          }

          return this.rval;
        },
        dispatchException: function dispatchException(exception) {
          if (this.done) {
            throw exception;
          }

          var context = this;

          function handle(loc, caught) {
            record.type = "throw";
            record.arg = exception;
            context.next = loc;

            if (caught) {
              // If the dispatched exception was caught by a catch block,
              // then let that catch block handle the exception normally.
              context.method = "next";
              context.arg = undefined$1;
            }

            return !!caught;
          }

          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var entry = this.tryEntries[i];
            var record = entry.completion;

            if (entry.tryLoc === "root") {
              // Exception thrown outside of any try block that could handle
              // it, so set the completion value of the entire function to
              // throw the exception.
              return handle("end");
            }

            if (entry.tryLoc <= this.prev) {
              var hasCatch = hasOwn.call(entry, "catchLoc");
              var hasFinally = hasOwn.call(entry, "finallyLoc");

              if (hasCatch && hasFinally) {
                if (this.prev < entry.catchLoc) {
                  return handle(entry.catchLoc, true);
                } else if (this.prev < entry.finallyLoc) {
                  return handle(entry.finallyLoc);
                }
              } else if (hasCatch) {
                if (this.prev < entry.catchLoc) {
                  return handle(entry.catchLoc, true);
                }
              } else if (hasFinally) {
                if (this.prev < entry.finallyLoc) {
                  return handle(entry.finallyLoc);
                }
              } else {
                throw new Error("try statement without catch or finally");
              }
            }
          }
        },
        abrupt: function abrupt(type, arg) {
          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var entry = this.tryEntries[i];

            if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
              var finallyEntry = entry;
              break;
            }
          }

          if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
            // Ignore the finally entry if control is not jumping to a
            // location outside the try/catch block.
            finallyEntry = null;
          }

          var record = finallyEntry ? finallyEntry.completion : {};
          record.type = type;
          record.arg = arg;

          if (finallyEntry) {
            this.method = "next";
            this.next = finallyEntry.finallyLoc;
            return ContinueSentinel;
          }

          return this.complete(record);
        },
        complete: function complete(record, afterLoc) {
          if (record.type === "throw") {
            throw record.arg;
          }

          if (record.type === "break" || record.type === "continue") {
            this.next = record.arg;
          } else if (record.type === "return") {
            this.rval = this.arg = record.arg;
            this.method = "return";
            this.next = "end";
          } else if (record.type === "normal" && afterLoc) {
            this.next = afterLoc;
          }

          return ContinueSentinel;
        },
        finish: function finish(finallyLoc) {
          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var entry = this.tryEntries[i];

            if (entry.finallyLoc === finallyLoc) {
              this.complete(entry.completion, entry.afterLoc);
              resetTryEntry(entry);
              return ContinueSentinel;
            }
          }
        },
        "catch": function _catch(tryLoc) {
          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var entry = this.tryEntries[i];

            if (entry.tryLoc === tryLoc) {
              var record = entry.completion;

              if (record.type === "throw") {
                var thrown = record.arg;
                resetTryEntry(entry);
              }

              return thrown;
            }
          } // The context.catch method must only be called with a location
          // argument that corresponds to a known catch block.


          throw new Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(iterable, resultName, nextLoc) {
          this.delegate = {
            iterator: values(iterable),
            resultName: resultName,
            nextLoc: nextLoc
          };

          if (this.method === "next") {
            // Deliberately forget the last sent value so that we don't
            // accidentally pass it on to the delegate.
            this.arg = undefined$1;
          }

          return ContinueSentinel;
        }
      }; // Regardless of whether this script is executing as a CommonJS module
      // or not, return the runtime object so that we can declare the variable
      // regeneratorRuntime in the outer scope, which allows this module to be
      // injected easily by `bin/regenerator --include-runtime script.js`.

      return exports;
    }( // If this script is executing as a CommonJS module, use module.exports
    // as the regeneratorRuntime namespace. Otherwise create a new empty
    // object. Either way, the resulting object will be used to initialize
    // the regeneratorRuntime variable at the top of this file.
     module.exports );

    try {
      regeneratorRuntime = runtime;
    } catch (accidentalStrictMode) {
      // This module should not be running in strict mode, so the above
      // assignment should always work unless something is misconfigured. Just
      // in case runtime.js accidentally runs in strict mode, we can escape
      // strict mode using a global Function call. This could conceivably fail
      // if a Content Security Policy forbids using Function, but in that case
      // the proper solution is to fix the accidental strict mode problem. If
      // you've misconfigured your bundler to force strict mode and applied a
      // CSP to forbid Function, and you're not willing to fix either of those
      // problems, please detail your unique predicament in a GitHub issue.
      Function("r", "regeneratorRuntime = r")(runtime);
    }
  });

  var CppObject_1 = createCommonjsModule(function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CppObject = void 0;

    var CppObject = /*#__PURE__*/function () {
      function CppObject(ptr, inst) {
        _classCallCheck(this, CppObject);

        this.ptr = ptr;
        this.inst = inst;
      }

      _createClass(CppObject, [{
        key: "checkAlive",
        value: function checkAlive() {
          if (this.ptr) return;
          throw Error('Call after destroyed');
        }
      }, {
        key: "getPointer",
        value: function getPointer() {
          this.checkAlive();
          return this.ptr;
        }
      }]);

      return CppObject;
    }();

    exports.CppObject = CppObject;
  });

  var _enum = createCommonjsModule(function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ZBarConfigType = exports.ZBarSymbolType = void 0;

    (function (ZBarSymbolType) {
      ZBarSymbolType[ZBarSymbolType["ZBAR_NONE"] = 0] = "ZBAR_NONE";
      /**< no symbol decoded */

      ZBarSymbolType[ZBarSymbolType["ZBAR_PARTIAL"] = 1] = "ZBAR_PARTIAL";
      /**< intermediate status */

      ZBarSymbolType[ZBarSymbolType["ZBAR_EAN8"] = 8] = "ZBAR_EAN8";
      /**< EAN-8 */

      ZBarSymbolType[ZBarSymbolType["ZBAR_UPCE"] = 9] = "ZBAR_UPCE";
      /**< UPC-E */

      ZBarSymbolType[ZBarSymbolType["ZBAR_ISBN10"] = 10] = "ZBAR_ISBN10";
      /**< ISBN-10 (from EAN-13). @since 0.4 */

      ZBarSymbolType[ZBarSymbolType["ZBAR_UPCA"] = 12] = "ZBAR_UPCA";
      /**< UPC-A */

      ZBarSymbolType[ZBarSymbolType["ZBAR_EAN13"] = 13] = "ZBAR_EAN13";
      /**< EAN-13 */

      ZBarSymbolType[ZBarSymbolType["ZBAR_ISBN13"] = 14] = "ZBAR_ISBN13";
      /**< ISBN-13 (from EAN-13). @since 0.4 */

      ZBarSymbolType[ZBarSymbolType["ZBAR_I25"] = 25] = "ZBAR_I25";
      /**< Interleaved 2 of 5. @since 0.4 */

      ZBarSymbolType[ZBarSymbolType["ZBAR_CODE39"] = 39] = "ZBAR_CODE39";
      /**< Code 39. @since 0.4 */

      ZBarSymbolType[ZBarSymbolType["ZBAR_PDF417"] = 57] = "ZBAR_PDF417";
      /**< PDF417. @since 0.6 */

      ZBarSymbolType[ZBarSymbolType["ZBAR_QRCODE"] = 64] = "ZBAR_QRCODE";
      /**< QR Code. @since 0.10 */

      ZBarSymbolType[ZBarSymbolType["ZBAR_CODE128"] = 128] = "ZBAR_CODE128";
      /**< Code 128 */

      ZBarSymbolType[ZBarSymbolType["ZBAR_SYMBOL"] = 255] = "ZBAR_SYMBOL";
      /**< mask for base symbol type */

      ZBarSymbolType[ZBarSymbolType["ZBAR_ADDON2"] = 512] = "ZBAR_ADDON2";
      /**< 2-digit add-on flag */

      ZBarSymbolType[ZBarSymbolType["ZBAR_ADDON5"] = 1280] = "ZBAR_ADDON5";
      /**< 5-digit add-on flag */

      ZBarSymbolType[ZBarSymbolType["ZBAR_ADDON"] = 1792] = "ZBAR_ADDON";
      /**< add-on flag mask */
    })(exports.ZBarSymbolType || (exports.ZBarSymbolType = {}));

    (function (ZBarConfigType) {
      ZBarConfigType[ZBarConfigType["ZBAR_CFG_ENABLE"] = 0] = "ZBAR_CFG_ENABLE";
      /**< enable symbology/feature */

      ZBarConfigType[ZBarConfigType["ZBAR_CFG_ADD_CHECK"] = 1] = "ZBAR_CFG_ADD_CHECK";
      /**< enable check digit when optional */

      ZBarConfigType[ZBarConfigType["ZBAR_CFG_EMIT_CHECK"] = 2] = "ZBAR_CFG_EMIT_CHECK";
      /**< return check digit when present */

      ZBarConfigType[ZBarConfigType["ZBAR_CFG_ASCII"] = 3] = "ZBAR_CFG_ASCII";
      /**< enable full ASCII character set */

      ZBarConfigType[ZBarConfigType["ZBAR_CFG_NUM"] = 4] = "ZBAR_CFG_NUM";
      /**< number of boolean decoder configs */

      ZBarConfigType[ZBarConfigType["ZBAR_CFG_MIN_LEN"] = 32] = "ZBAR_CFG_MIN_LEN";
      /**< minimum data length for valid decode */

      ZBarConfigType[ZBarConfigType["ZBAR_CFG_MAX_LEN"] = 33] = "ZBAR_CFG_MAX_LEN";
      /**< maximum data length for valid decode */

      ZBarConfigType[ZBarConfigType["ZBAR_CFG_UNCERTAINTY"] = 64] = "ZBAR_CFG_UNCERTAINTY";
      /**< required video consistency frames */

      ZBarConfigType[ZBarConfigType["ZBAR_CFG_POSITION"] = 128] = "ZBAR_CFG_POSITION";
      /**< enable scanner to collect position data */

      ZBarConfigType[ZBarConfigType["ZBAR_CFG_X_DENSITY"] = 256] = "ZBAR_CFG_X_DENSITY";
      /**< image scanner vertical scan density */

      ZBarConfigType[ZBarConfigType["ZBAR_CFG_Y_DENSITY"] = 257] = "ZBAR_CFG_Y_DENSITY";
      /**< image scanner horizontal scan density */
    })(exports.ZBarConfigType || (exports.ZBarConfigType = {}));
  });

  var _Symbol = createCommonjsModule(function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Symbol = void 0;

    var TypePointer = function TypePointer(ptr, buf) {
      _classCallCheck(this, TypePointer);

      this.ptr = ptr;
      this.ptr32 = ptr >> 2;
      this.buf = buf;
      this.HEAP8 = new Int8Array(buf);
      this.HEAPU32 = new Uint32Array(buf);
      this.HEAP32 = new Int32Array(buf);
    };

    var SymbolPtr = /*#__PURE__*/function (_TypePointer) {
      _inherits(SymbolPtr, _TypePointer);

      var _super = _createSuper(SymbolPtr);

      function SymbolPtr() {
        _classCallCheck(this, SymbolPtr);

        return _super.apply(this, arguments);
      }

      _createClass(SymbolPtr, [{
        key: "type",
        get: function get() {
          return this.HEAPU32[this.ptr32];
        }
      }, {
        key: "data",
        get: function get() {
          var len = this.HEAPU32[this.ptr32 + 2];
          var ptr = this.HEAPU32[this.ptr32 + 3];
          return Int8Array.from(this.HEAP8.subarray(ptr, ptr + len));
        }
      }, {
        key: "points",
        get: function get() {
          var len = this.HEAPU32[this.ptr32 + 5];
          var ptr = this.HEAPU32[this.ptr32 + 6];
          var ptr32 = ptr >> 2;
          var res = [];

          for (var i = 0; i < len; ++i) {
            var x = this.HEAP32[ptr32 + i * 2];
            var y = this.HEAP32[ptr32 + i * 2 + 1];
            res.push({
              x: x,
              y: y
            });
          }

          return res;
        }
      }, {
        key: "next",
        get: function get() {
          var ptr = this.HEAPU32[this.ptr32 + 8];
          if (!ptr) return null;
          return new SymbolPtr(ptr, this.buf);
        }
      }, {
        key: "time",
        get: function get() {
          return this.HEAPU32[this.ptr32 + 10];
        }
      }, {
        key: "cacheCount",
        get: function get() {
          return this.HEAP32[this.ptr32 + 11];
        }
      }, {
        key: "quality",
        get: function get() {
          return this.HEAP32[this.ptr32 + 12];
        }
      }]);

      return SymbolPtr;
    }(TypePointer);

    var SymbolSetPtr = /*#__PURE__*/function (_TypePointer2) {
      _inherits(SymbolSetPtr, _TypePointer2);

      var _super2 = _createSuper(SymbolSetPtr);

      function SymbolSetPtr() {
        _classCallCheck(this, SymbolSetPtr);

        return _super2.apply(this, arguments);
      }

      _createClass(SymbolSetPtr, [{
        key: "head",
        get: function get() {
          var ptr = this.HEAPU32[this.ptr32 + 2];
          if (!ptr) return null;
          return new SymbolPtr(ptr, this.buf);
        }
      }]);

      return SymbolSetPtr;
    }(TypePointer);

    var _Symbol2 = /*#__PURE__*/function () {
      function _Symbol2(ptr) {
        _classCallCheck(this, _Symbol2);

        this.type = ptr.type;
        this.typeName = _enum.ZBarSymbolType[this.type];
        this.data = ptr.data;
        this.points = ptr.points;
        this.time = ptr.time;
        this.cacheCount = ptr.cacheCount;
        this.quality = ptr.quality;
      }

      _createClass(_Symbol2, [{
        key: "decode",
        value: function decode(encoding) {
          var decoder = new TextDecoder(encoding);
          return decoder.decode(this.data);
        }
      }], [{
        key: "createSymbolsFromPtr",
        value: function createSymbolsFromPtr(ptr, buf) {
          if (ptr == 0) return [];
          var set = new SymbolSetPtr(ptr, buf);
          var symbol = set.head;
          var res = [];

          while (symbol !== null) {
            res.push(new _Symbol2(symbol));
            symbol = symbol.next;
          }

          return res;
        }
      }]);

      return _Symbol2;
    }();

    exports.Symbol = _Symbol2;
  });

  var load = createCommonjsModule(function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.loadWasmInstance = void 0;
    var readFile = util__default['default'].promisify(fs__default['default'].readFile);

    exports.loadWasmInstance = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(importObj) {
        var binary, output;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return readFile(__dirname + '/zbar.wasm');

              case 2:
                binary = _context.sent;
                _context.next = 5;
                return WebAssembly.instantiate(binary, importObj);

              case 5:
                output = _context.sent;
                return _context.abrupt("return", output.instance);

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  });

  var instance = createCommonjsModule(function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getMemoryGrowTimestamp = exports.getInstance = void 0;
    var inst = null;
    var HEAP32 = new Int32Array();

    var clock_gettime = function clock_gettime(clk_id, tp) {
      var now = Date.now();
      HEAP32[tp >> 2] = now / 1e3 | 0;
      HEAP32[tp + 4 >> 2] = now % 1e3 * 1e3 * 1e3 | 0;
      return 0;
    };

    var lastGrowTimestamp = 0;

    var emscripten_notify_memory_growth = function emscripten_notify_memory_growth(idx) {
      if (lastGrowTimestamp) {
        console.info('zbar.wasm: Memory Grow: ', inst.memory.buffer.byteLength);
      }

      lastGrowTimestamp = Date.now();
      HEAP32 = new Int32Array(inst.memory.buffer);
    };

    var importObj = {
      env: {
        clock_gettime: clock_gettime,
        emscripten_notify_memory_growth: emscripten_notify_memory_growth
      }
    };

    var instPromise = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      var res;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return load.loadWasmInstance(importObj);

            case 2:
              res = _context.sent;

              if (res) {
                _context.next = 5;
                break;
              }

              throw Error('WASM was not loaded');

            case 5:
              inst = res.exports;
              emscripten_notify_memory_growth();
              return _context.abrupt("return", inst);

            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }))();

    exports.getInstance = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return instPromise;

            case 2:
              return _context2.abrupt("return", _context2.sent);

            case 3:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    exports.getMemoryGrowTimestamp = function () {
      return lastGrowTimestamp;
    };
  });

  var Image_1 = createCommonjsModule(function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Image = void 0;

    var Image = /*#__PURE__*/function (_CppObject_1$CppObjec) {
      _inherits(Image, _CppObject_1$CppObjec);

      var _super = _createSuper(Image);

      function Image() {
        _classCallCheck(this, Image);

        return _super.apply(this, arguments);
      }

      _createClass(Image, [{
        key: "destroy",
        value: function destroy() {
          this.checkAlive();
          this.inst.Image_destory(this.ptr);
          this.ptr = 0;
        }
      }, {
        key: "getSymbols",
        value: function getSymbols() {
          this.checkAlive();
          var res = this.inst.Image_get_symbols(this.ptr);
          return _Symbol.Symbol.createSymbolsFromPtr(res, this.inst.memory.buffer);
        }
      }], [{
        key: "createFromGrayBuffer",
        value: function () {
          var _createFromGrayBuffer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(width, height, dataBuf) {
            var sequence_num,
                inst,
                heap,
                data,
                len,
                buf,
                ptr,
                _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    sequence_num = _args.length > 3 && _args[3] !== undefined ? _args[3] : 0;
                    _context.next = 3;
                    return instance.getInstance();

                  case 3:
                    inst = _context.sent;
                    heap = new Uint8Array(inst.memory.buffer);
                    data = new Uint8Array(dataBuf);
                    len = width * height;

                    if (!(len !== data.byteLength)) {
                      _context.next = 9;
                      break;
                    }

                    throw Error('dataBuf does not match width and height');

                  case 9:
                    buf = inst.malloc(len);
                    heap.set(data, buf);
                    ptr = inst.Image_create(width, height, 0x30303859
                    /* Y800 */
                    , buf, len, sequence_num);
                    return _context.abrupt("return", new this(ptr, inst));

                  case 13:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee, this);
          }));

          function createFromGrayBuffer(_x, _x2, _x3) {
            return _createFromGrayBuffer.apply(this, arguments);
          }

          return createFromGrayBuffer;
        }()
      }, {
        key: "createFromRGBABuffer",
        value: function () {
          var _createFromRGBABuffer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(width, height, dataBuf) {
            var sequence_num,
                inst,
                heap,
                data,
                len,
                buf,
                i,
                r,
                g,
                b,
                ptr,
                _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    sequence_num = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : 0;
                    _context2.next = 3;
                    return instance.getInstance();

                  case 3:
                    inst = _context2.sent;
                    heap = new Uint8Array(inst.memory.buffer);
                    data = new Uint8Array(dataBuf);
                    len = width * height;

                    if (!(len * 4 !== data.byteLength)) {
                      _context2.next = 9;
                      break;
                    }

                    throw Error('dataBuf does not match width and height');

                  case 9:
                    buf = inst.malloc(len);

                    for (i = 0; i < len; ++i) {
                      r = data[i * 4];
                      g = data[i * 4 + 1];
                      b = data[i * 4 + 2];
                      heap[buf + i] = r * 19595 + g * 38469 + b * 7472 >> 16;
                    }

                    ptr = inst.Image_create(width, height, 0x30303859
                    /* Y800 */
                    , buf, len, sequence_num);
                    return _context2.abrupt("return", new this(ptr, inst));

                  case 13:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2, this);
          }));

          function createFromRGBABuffer(_x4, _x5, _x6) {
            return _createFromRGBABuffer.apply(this, arguments);
          }

          return createFromRGBABuffer;
        }()
      }]);

      return Image;
    }(CppObject_1.CppObject);

    exports.Image = Image;
  });

  var ImageScanner_1 = createCommonjsModule(function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ImageScanner = void 0;

    var ImageScanner = /*#__PURE__*/function (_CppObject_1$CppObjec) {
      _inherits(ImageScanner, _CppObject_1$CppObjec);

      var _super = _createSuper(ImageScanner);

      function ImageScanner() {
        _classCallCheck(this, ImageScanner);

        return _super.apply(this, arguments);
      }

      _createClass(ImageScanner, [{
        key: "destroy",
        value: function destroy() {
          this.checkAlive();
          this.inst.ImageScanner_destory(this.ptr);
          this.ptr = 0;
        }
      }, {
        key: "setConfig",
        value: function setConfig(sym, conf, value) {
          this.checkAlive();
          return this.inst.ImageScanner_set_config(this.ptr, sym, conf, value);
        }
      }, {
        key: "enableCache",
        value: function enableCache() {
          var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
          this.checkAlive();
          this.inst.ImageScanner_enable_cache(this.ptr, enable);
        }
      }, {
        key: "recycleImage",
        value: function recycleImage(image) {
          this.checkAlive();
          this.inst.ImageScanner_recycle_image(this.ptr, image.getPointer());
        }
      }, {
        key: "getResults",
        value: function getResults() {
          this.checkAlive();
          var res = this.inst.ImageScanner_get_results(this.ptr);
          return _Symbol.Symbol.createSymbolsFromPtr(res, this.inst.memory.buffer);
        }
      }, {
        key: "scan",
        value: function scan(image) {
          this.checkAlive();
          return this.inst.ImageScanner_scan(this.ptr, image.getPointer());
        }
      }], [{
        key: "create",
        value: function () {
          var _create = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
            var inst, ptr;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return instance.getInstance();

                  case 2:
                    inst = _context.sent;
                    ptr = inst.ImageScanner_create();
                    return _context.abrupt("return", new this(ptr, inst));

                  case 5:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee, this);
          }));

          function create() {
            return _create.apply(this, arguments);
          }

          return create;
        }()
      }]);

      return ImageScanner;
    }(CppObject_1.CppObject);

    exports.ImageScanner = ImageScanner;
  });

  var module = createCommonjsModule(function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.scanImageData = exports.scanRGBABuffer = exports.scanGrayBuffer = exports.getDefaultScanner = void 0;
    var defaultScannerPromise = ImageScanner_1.ImageScanner.create();
    exports.getDefaultScanner = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return defaultScannerPromise;

            case 2:
              return _context.abrupt("return", _context.sent);

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    var scanImage = /*#__PURE__*/function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(image, scanner) {
        var res;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(scanner === undefined)) {
                  _context2.next = 4;
                  break;
                }

                _context2.next = 3;
                return defaultScannerPromise;

              case 3:
                scanner = _context2.sent;

              case 4:
                res = scanner.scan(image);

                if (!(res < 0)) {
                  _context2.next = 7;
                  break;
                }

                throw Error('Scan Failed');

              case 7:
                if (!(res === 0)) {
                  _context2.next = 9;
                  break;
                }

                return _context2.abrupt("return", []);

              case 9:
                return _context2.abrupt("return", image.getSymbols());

              case 10:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      return function scanImage(_x, _x2) {
        return _ref2.apply(this, arguments);
      };
    }();

    exports.scanGrayBuffer = /*#__PURE__*/function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(buffer, width, height, scanner) {
        var image, res;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return Image_1.Image.createFromGrayBuffer(width, height, buffer);

              case 2:
                image = _context3.sent;
                _context3.next = 5;
                return scanImage(image, scanner);

              case 5:
                res = _context3.sent;
                image.destroy();
                return _context3.abrupt("return", res);

              case 8:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      return function (_x3, _x4, _x5, _x6) {
        return _ref3.apply(this, arguments);
      };
    }();

    exports.scanRGBABuffer = /*#__PURE__*/function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(buffer, width, height, scanner) {
        var image, res;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return Image_1.Image.createFromRGBABuffer(width, height, buffer);

              case 2:
                image = _context4.sent;
                _context4.next = 5;
                return scanImage(image, scanner);

              case 5:
                res = _context4.sent;
                image.destroy();
                return _context4.abrupt("return", res);

              case 8:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      return function (_x7, _x8, _x9, _x10) {
        return _ref4.apply(this, arguments);
      };
    }();

    exports.scanImageData = /*#__PURE__*/function () {
      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(image, scanner) {
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return exports.scanRGBABuffer(image.data.buffer, image.width, image.height, scanner);

              case 2:
                return _context5.abrupt("return", _context5.sent);

              case 3:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      return function (_x11, _x12) {
        return _ref5.apply(this, arguments);
      };
    }();
  });

  var dist = createCommonjsModule(function (module$1, exports) {

    var __createBinding = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      Object.defineProperty(o, k2, {
        enumerable: true,
        get: function get() {
          return m[k];
        }
      });
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });

    var __exportStar = commonjsGlobal && commonjsGlobal.__exportStar || function (m, exports) {
      for (var p in m) {
        if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
      }
    };

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    __exportStar(Image_1, exports);

    __exportStar(ImageScanner_1, exports);

    __exportStar(module, exports);

    __exportStar(_Symbol, exports);
  });

  function scanCode(video, canvas, onDone) {
    function init(onDone) {
      var pr = navigator.mediaDevices.getUserMedia({
        audio: false,
        video: {
          facingMode: 'environment',
          width: {
            max: 640
          },
          height: {
            max: 640
          }
        }
      });
      pr.then(function (mediaStream) {
        video.srcObject = mediaStream;
        video.setAttribute('playsinline', '');
        video.play();
        video.onloadedmetadata = onDone;
        handleResize();
      })["catch"](function (err) {
        alert("CATCH " + err);
      });
    }

    function handleResize() {
      var width = document.documentElement.clientWidth;
      var height = document.documentElement.clientHeight;
      video.width = width;
      video.height = height;
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;

      if (width / video.videoWidth < height / video.videoHeight) {
        canvas.style.width = '100vw';
        canvas.style.height = 'auto';
      } else {
        canvas.style.width = 'auto';
        canvas.style.height = '100vh';
      }
    }

    init(function () {
      window.addEventListener("resize", handleResize); //window.removeEventListener("resize",handleResize);

      function once() {
        handleResize();
        var width = video.videoWidth;
        var height = video.videoHeight;
        canvas.width = width;
        canvas.height = height;
        var ctx = canvas.getContext('2d');
        ctx.drawImage(video, 0, 0, width, height);
        var imgData = ctx.getImageData(0, 0, width, height);
        var pr = dist.scanImageData(imgData);
        pr.then(function (symbols) {
          onDone(symbols, once);
        });
      }

      once();
    });
  }

  exports.scanCode = scanCode;

  Object.defineProperty(exports, '__esModule', { value: true });

  return exports;

}({}, fs, util));

		return onDone(zbar);
	}
